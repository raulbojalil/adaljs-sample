@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>ADAL.JS Sample</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.2/css/bulma.min.css">
    <script defer src="https://use.fontawesome.com/releases/v5.3.1/js/all.js"></script>
    <script src="https://secure.aadcdn.microsoftonline-p.com/lib/1.0.17/js/adal.min.js"></script>
</head>
<body>
    <section class="section">
        <div class="container">
            <h1 class="title">
                ADAL.JS Sample
            </h1>
            <p class="subtitle">
                This sample shows how to use ADAL.js to retrieve an Azure AD token to call
                protected API endpoints. Useful for SPA applications (Angular, Vue.js, etc.) that need to
                access a protected ASP.NET Core Web API.
            </p>

            <div class="notification">
                <a style="display:none" id="login-button" onclick="authContext.login();" class="button is-primary">Log in</a>
                <a style="display:none" id="logout-button" onclick="authContext.logOut();" class="button is-danger">Log out</a>
            </div>

            <textarea readonly style="width: 100%; height: 500px" id="log-output"></textarea>

        </div>
    </section>

    <script type="text/javascript">

        var clientId = '@ViewBag.ClientId';

        var authContext = new AuthenticationContext({ clientId });

        var logMessage = function (message) {
            document.getElementById("log-output").innerHTML += message;
        }

        //This is the function that calls the API endpoint using the retrieved token
        var getValues = function (token) {

            logMessage("\n\nToken: " + token);

            var xmlhttp = new XMLHttpRequest();

            xmlhttp.onreadystatechange = function () {
                if (xmlhttp.readyState == XMLHttpRequest.DONE) {
                    if (xmlhttp.status == 200) 
                        logMessage("\n\nResponse: " + xmlhttp.responseText);
                    else
                        logMessage("\n\nUnexpected response received: " + xmlhttp.status);

                }
            };

            xmlhttp.open("GET", "api/values", true);
            xmlhttp.setRequestHeader("Authorization", "Bearer " + token);
            xmlhttp.send();
        }


        if (!authContext.isCallback(window.location.hash)) {

            var user = authContext.getCachedUser();

            if (user) {

                logMessage('User: ' + user.userName);

                authContext.acquireToken(
                    clientId,
                    function (error, token) {

                        if (error)
                            logMessage('\n\nERROR: ' + error);
                        else {
                            document.getElementById('logout-button').style.display = "";
                            //Call the API endpoint using the token
                            getValues(token);
                        }
                           
                    }
                );

            }
            else {

                document.getElementById('login-button').style.display = "";
                logMessage("Not logged in.");
            }
        }
        else
        {
            authContext.handleWindowCallback();
            var error = authContext.getLoginError();
            if (error)
                logMessage("ERROR: " + error);
        }

    </script>
</body>
</html>